sharding:
  jdbc:
    datasource:
      names: dbs_0,dbs_1,dbs_2
      dbs_0:
        url: jdbc:mysql://localhost:3306/dbs_0?useUnicode=true&characterEncoding=utf8&verifyServerCertificate=false&useSSL=true
        driver-class-name: com.mysql.jdbc.Driver
        username: root
        password: root
        initialSize: 1
        minIdle: 1
        maxActive: 20
        maxWait: 60000
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        type: com.alibaba.druid.pool.DruidDataSource
      dbs_1:
        url: jdbc:mysql://localhost:3306/dbs_1?useUnicode=true&characterEncoding=utf8&verifyServerCertificate=false&useSSL=true
        driver-class-name: com.mysql.jdbc.Driver
        username: root
        password: root
        initialSize: 1
        minIdle: 1
        maxActive: 20
        maxWait: 60000
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        type: com.alibaba.druid.pool.DruidDataSource
      dbs_2:
        url: jdbc:mysql://localhost:3306/dbs_2?useUnicode=true&characterEncoding=utf8&verifyServerCertificate=false&useSSL=true
        driver-class-name: com.mysql.jdbc.Driver
        username: root
        password: root
        initialSize: 1
        minIdle: 1
        maxActive: 20
        maxWait: 60000
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        type: com.alibaba.druid.pool.DruidDataSource
    config:
      sharding:
        tables:
          user:
            actualDataNodes: dbs_${0..2}.user_${0}
            tableStrategy:
              inline:
                shardingColumn: id
                algorithmExpression: user_${id % id}
            keyGeneratorColumnName: id
            keyGeneratorClass: com.yanggy.springboot.uuid.IpKeyGenerator
            databaseStrategy:
              inline:
                shardingColumn: id
                algorithmExpression: dbs_${id % 3}
          order:
            actualDataNodes: dbs_${0..2}.order_${0..2}
            tableStrategy:
              inline:
                shardingColumn: id
                algorithmExpression: order_${id % 3}
            keyGeneratorColumnName: id
            keyGeneratorClass: com.yanggy.springboot.uuid.IpKeyGenerator
            databaseStrategy:
              inline:
                shardingColumn: user_id
                algorithmExpression: dbs_${user_id % 3}
        props:
          sql.show: true