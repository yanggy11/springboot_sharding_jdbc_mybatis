server:
  port: 1988

spring:
  application:
    name: springboot
mybatis:
  mapper-locations: classpath:sql-mapper/*.xml

# 所有主从库
sharding:
  jdbc:
    datasource:
      names: dbs_0,dbs_1,dbs_2
      dbs_0:
        url: jdbc:mysql://rm-bp17330s3si44dsz7bo.mysql.rds.aliyuncs.com:3306/dbs_0
        driver-class-name: com.mysql.jdbc.Driver
        username: root
        password: Ygy250725
        initialSize: 1
        minIdle: 1
        maxActive: 20
        maxWait: 60000
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        type: com.alibaba.druid.pool.DruidDataSource
      dbs_1:
        url: jdbc:mysql://rm-bp17330s3si44dsz7bo.mysql.rds.aliyuncs.com:3306/dbs_1
        driver-class-name: com.mysql.jdbc.Driver
        username: root
        password: Ygy250725
        initialSize: 1
        minIdle: 1
        maxActive: 20
        maxWait: 60000
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        type: com.alibaba.druid.pool.DruidDataSource
      dbs_2:
        url: jdbc:mysql://rm-bp17330s3si44dsz7bo.mysql.rds.aliyuncs.com:3306/dbs_2
        driver-class-name: com.mysql.jdbc.Driver
        username: root
        password: Ygy250725
        initialSize: 1
        minIdle: 1
        maxActive: 20
        maxWait: 60000
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        type: com.alibaba.druid.pool.DruidDataSource
    config:
      sharding:
        tables:
          user:
            actualDataNodes: dbs_${0..2}.user_${0}
            tableStrategy:
              inline:
                shardingColumn: id
                algorithmExpression: user_${id % id}
            keyGeneratorColumnName: id
            databaseStrategy:
              inline:
                shardingColumn: id
                algorithmExpression: dbs_${id % 3}
          order:
            actualDataNodes: dbs_${0..2}.order_${0..2}
            tableStrategy:
              inline:
                shardingColumn: id
                algorithmExpression: order_${id % 3}
            keyGeneratorColumnName: id
            databaseStrategy:
              inline:
                shardingColumn: user_id
                algorithmExpression: dbs_${user_id % 3}

#sharding:
#	jdbc:
#		datasource: //数据源配置
#			names: ds_master_0,ds_master_1,ds_master_0_slave_0,ds_master_0_slave_1,ds_master_1_slave_0,ds_master_1_slave_1
#			ds_master_0:
#				type: com.alibaba.druid.pool.DruidDataSource
#				driverClassName: com.mysql.jdbc.Driver
#				url: jdbc:mysql://127.0.0.1:3306/ds_master_0?useSSL=false
#				username: travis
#				password:
#			ds_master_0_slave_0:
#				type: com.alibaba.druid.pool.DruidDataSource
#			    driverClassName: com.mysql.jdbc.Driver
#			    url: jdbc:mysql://127.0.0.1:3306/ds_master_0_slave_0?useSSL=false
#			    username: travis
#			    password:
#			ds_master_0_slave_1:
#				type: com.alibaba.druid.pool.DruidDataSource
#			    driverClassName: com.mysql.jdbc.Driver
#			    url: jdbc:mysql://127.0.0.1:3306/ds_master_0_slave_1?useSSL=false
#			    username: travis
#			    password:
#			ds_master_1:
#				type: com.alibaba.druid.pool.DruidDataSource
#			    driverClassName: com.mysql.jdbc.Driver
#			    url: jdbc:mysql://127.0.0.1:3306/ds_master_1?useSSL=false
#			    username: travis
#			    password:
#			ds_master_1_slave_0:
#				type: com.alibaba.druid.pool.DruidDataSource
#			    driverClassName: com.mysql.jdbc.Driver
#			    url: jdbc:mysql://127.0.0.1:3306/ds_master_1_slave_0?useSSL=false
#			    username: travis
#			    password:
#			ds_master_1_slave_1:
#				type: com.alibaba.druid.pool.DruidDataSource
#			    driverClassName: com.mysql.jdbc.Driver
#			    url: jdbc:mysql://127.0.0.1:3306/ds_master_1_slave_1?useSSL=false
#			    username: travis
#			    password:
#		config:
#			sharding:
#				tables: //分库分表配置
#					t_user:
#						actualDataNodes:
#						tableStrategy:
#							inline:
#								shardingColumn: user_id
#								algorithmExpression: t_user_${user_id % 2}
#						keyGeneratorColumnName: user_id
#						databaseStrategy:
#							inline:
#								shardingColumn: user_id
#								algorithmExpression: t_user_${user_id % 2}
#				master-slave-rules: //主从配置
#					ds_0:
#						masterDataSourceName: ds_master_0
#						slaveDataSourceNames: ds_master_0_slave_0, ds_master_0_slave_1:
#					ds_1:
#						masterDataSourceName: ds_master_1
#                        slaveDataSourceNames: ds_master_1_slave_0, ds_master_1_slave_1
